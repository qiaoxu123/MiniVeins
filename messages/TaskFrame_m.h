//
// Generated file, do not edit! Created by opp_msgtool 6.0 from messages/TaskFrame.msg.
//

#ifndef __TASKFRAME_M_H
#define __TASKFRAME_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class TaskFrame;
/**
 * Class generated from <tt>messages/TaskFrame.msg:2</tt> by opp_msgtool.
 * <pre>
 * message TaskFrame
 * {
 *     int carID;
 *     int rsuID;
 *     int taskSize;
 * }
 * </pre>
 */
class TaskFrame : public ::omnetpp::cMessage
{
  protected:
    int carID = 0;
    int rsuID = 0;
    int taskSize = 0;

  private:
    void copy(const TaskFrame& other);

  protected:
    bool operator==(const TaskFrame&) = delete;

  public:
    TaskFrame(const char *name=nullptr, short kind=0);
    TaskFrame(const TaskFrame& other);
    virtual ~TaskFrame();
    TaskFrame& operator=(const TaskFrame& other);
    virtual TaskFrame *dup() const override {return new TaskFrame(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getCarID() const;
    virtual void setCarID(int carID);

    virtual int getRsuID() const;
    virtual void setRsuID(int rsuID);

    virtual int getTaskSize() const;
    virtual void setTaskSize(int taskSize);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TaskFrame& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TaskFrame& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline TaskFrame *fromAnyPtr(any_ptr ptr) { return check_and_cast<TaskFrame*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __TASKFRAME_M_H

