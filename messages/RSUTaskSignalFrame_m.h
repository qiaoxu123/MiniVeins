//
// Generated file, do not edit! Created by opp_msgtool 6.0 from messages/RSUTaskSignalFrame.msg.
//

#ifndef __RSUTASKSIGNALFRAME_M_H
#define __RSUTASKSIGNALFRAME_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class RSUTaskSignalFrame;
/**
 * Class generated from <tt>messages/RSUTaskSignalFrame.msg:2</tt> by opp_msgtool.
 * <pre>
 * message RSUTaskSignalFrame
 * {
 *     int TaskSize;
 * }
 * </pre>
 */
class RSUTaskSignalFrame : public ::omnetpp::cMessage
{
  protected:
    int TaskSize = 0;

  private:
    void copy(const RSUTaskSignalFrame& other);

  protected:
    bool operator==(const RSUTaskSignalFrame&) = delete;

  public:
    RSUTaskSignalFrame(const char *name=nullptr, short kind=0);
    RSUTaskSignalFrame(const RSUTaskSignalFrame& other);
    virtual ~RSUTaskSignalFrame();
    RSUTaskSignalFrame& operator=(const RSUTaskSignalFrame& other);
    virtual RSUTaskSignalFrame *dup() const override {return new RSUTaskSignalFrame(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getTaskSize() const;
    virtual void setTaskSize(int TaskSize);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const RSUTaskSignalFrame& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, RSUTaskSignalFrame& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline RSUTaskSignalFrame *fromAnyPtr(any_ptr ptr) { return check_and_cast<RSUTaskSignalFrame*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __RSUTASKSIGNALFRAME_M_H

